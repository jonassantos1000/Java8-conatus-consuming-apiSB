/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Relatorios;

import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import model.Client;
import model.Employee;
import model.Order;
import model.Product;
import model.reports.Report;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import util.Mascara;

/**
 *
 * @author faculdade
 */
public class RelatoriosPrincipal extends javax.swing.JFrame {

    String limite = "99999999";
    List<Report> listReport;
    List<Report> servicos = new ArrayList<Report>();
    List<Report> clientes = new ArrayList<Report>();
    List<Report> funcionarios = new ArrayList<Report>();
    List<Report> movimentacoes = new ArrayList<Report>();
    Report relatorio;

    public RelatoriosPrincipal() {
        this.listReport = service.ReportService.findReport();
        initComponents();
        separaCategoriaRelatorios();
        listaRelatorios(listReport);
        TableColumnModel modeltable = grid.getColumnModel();
        modeltable.getColumn(0).setPreferredWidth(100);
        modeltable.getColumn(1).setPreferredWidth(300);
        modeltable.getColumn(2).setPreferredWidth(200);
        modeltable.getColumn(3).setPreferredWidth(3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FilterProductList = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigoServico = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDescricaoServico = new javax.swing.JTextField();
        ckListaInativo = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        btFecharServico = new javax.swing.JButton();
        btProcessarServicos = new javax.swing.JButton();
        FilterClientList = new javax.swing.JDialog();
        pnFiltrosCliente1 = new javax.swing.JPanel();
        txtCPFCliente = new javax.swing.JFormattedTextField();
        lbCPFCliente1 = new javax.swing.JLabel();
        lbRGCliente1 = new javax.swing.JLabel();
        txtRGCliente = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        lbCodigoCliente1 = new javax.swing.JLabel();
        txtCodigoCliente = new javax.swing.JTextField();
        lbNomeCliente1 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btFecharCliente1 = new javax.swing.JButton();
        btProcessarCliente1 = new javax.swing.JButton();
        FilterEmployeeList = new javax.swing.JDialog();
        pnFiltrosFuncionarios = new javax.swing.JPanel();
        txtCPFFuncionario = new javax.swing.JFormattedTextField();
        lbCPFFuncionario = new javax.swing.JLabel();
        lbRGFuncionario = new javax.swing.JLabel();
        txtRGFuncionario = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        lbCodigoFuncionario = new javax.swing.JLabel();
        txtCodigoFuncionario = new javax.swing.JTextField();
        lbNomeFuncionario = new javax.swing.JLabel();
        txtNomeFuncionario = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btFecharFuncionario = new javax.swing.JButton();
        btProcessarFuncionario = new javax.swing.JButton();
        FilterOrderList = new javax.swing.JDialog();
        pnFiltrosMovimentacoes = new javax.swing.JPanel();
        txtCPFClienteMovimentacao = new javax.swing.JFormattedTextField();
        lbCPFClienteMovimentacao = new javax.swing.JLabel();
        lbRGClienteMovimentacao = new javax.swing.JLabel();
        txtRGClienteMovimentacao = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        lbCodigoMovimentacao = new javax.swing.JLabel();
        txtCodigoMovimentacao = new javax.swing.JTextField();
        lbCliente = new javax.swing.JLabel();
        txtCodigoClienteMovimentacao = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btLimparMovimentacao = new javax.swing.JButton();
        btFecharMovimentacao = new javax.swing.JButton();
        lbCodigoClienteMovimentacao = new javax.swing.JLabel();
        txtNomeClienteMovimentacao = new javax.swing.JTextField();
        txtDataInicial = new javax.swing.JFormattedTextField();
        txtDataFinal = new javax.swing.JFormattedTextField();
        lbDataFinal = new javax.swing.JLabel();
        lbDataInicial = new javax.swing.JLabel();
        txtNomeFuncionarioMovimentacao = new javax.swing.JTextField();
        lbFuncionario = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btProcessarMovimentacao = new javax.swing.JButton();
        FiltroTotalizadorPorMes = new javax.swing.JDialog();
        pnFiltrosMovimentacoes1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        btFecharFiltroTotalizadorMes = new javax.swing.JButton();
        btProcessarFiltroTotalizadorMes = new javax.swing.JButton();
        lbAnoReferenciaTotalizadorPorMes = new javax.swing.JLabel();
        txtAnoTotalizadorPorMes = new javax.swing.JTextField();
        pnTitulo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pnMenu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btTodos = new javax.swing.JButton();
        btCliente = new javax.swing.JButton();
        btServico = new javax.swing.JButton();
        btFuncionario = new javax.swing.JButton();
        btMovimentacao = new javax.swing.JButton();
        pnDireito = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid = new javax.swing.JTable();
        pnInferior = new javax.swing.JPanel();
        btCancelar = new javax.swing.JButton();
        btProcessar = new javax.swing.JButton();

        FilterProductList.setUndecorated(true);
        FilterProductList.setResizable(false);
        FilterProductList.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setOpaque(true);
        jLabel8.setPreferredSize(new java.awt.Dimension(400, 2));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 440, 2));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Codigo");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, -1, -1));
        jPanel1.add(txtCodigoServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 156, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Descrição");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, -1, -1));

        txtDescricaoServico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescricaoServicoFocusLost(evt);
            }
        });
        jPanel1.add(txtDescricaoServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 156, -1));

        ckListaInativo.setBackground(new java.awt.Color(255, 255, 255));
        ckListaInativo.setText("Incluir Inativos na Consulta");
        jPanel1.add(ckListaInativo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 200, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Filtros");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 15, 520, 40));

        btFecharServico.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btFecharServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaocancelar6.png"))); // NOI18N
        btFecharServico.setText("Fechar");
        btFecharServico.setToolTipText("");
        btFecharServico.setBorderPainted(false);
        btFecharServico.setContentAreaFilled(false);
        btFecharServico.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btFecharServico.setRequestFocusEnabled(false);
        btFecharServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharServicoActionPerformed(evt);
            }
        });
        jPanel1.add(btFecharServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 110, 40));

        btProcessarServicos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btProcessarServicos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaoefetivar5.png"))); // NOI18N
        btProcessarServicos.setText("Processar");
        btProcessarServicos.setToolTipText("");
        btProcessarServicos.setBorderPainted(false);
        btProcessarServicos.setContentAreaFilled(false);
        btProcessarServicos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btProcessarServicos.setRequestFocusEnabled(false);
        btProcessarServicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcessarServicosActionPerformed(evt);
            }
        });
        jPanel1.add(btProcessarServicos, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 110, 40));

        FilterProductList.getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 310));

        FilterClientList.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnFiltrosCliente1.setBackground(new java.awt.Color(255, 255, 255));
        pnFiltrosCliente1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCPFCliente.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtCPFCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCPFClienteFocusGained(evt);
            }
        });
        pnFiltrosCliente1.add(txtCPFCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 156, -1));

        lbCPFCliente1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lbCPFCliente1.setText("CPF");
        pnFiltrosCliente1.add(lbCPFCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, -1, 20));

        lbRGCliente1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lbRGCliente1.setText("RG");
        pnFiltrosCliente1.add(lbRGCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, 20));

        txtRGCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRGClienteFocusGained(evt);
            }
        });
        pnFiltrosCliente1.add(txtRGCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 120, -1));

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setOpaque(true);
        jLabel10.setPreferredSize(new java.awt.Dimension(400, 2));
        pnFiltrosCliente1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 440, 2));

        lbCodigoCliente1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbCodigoCliente1.setText("Codigo");
        pnFiltrosCliente1.add(lbCodigoCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));
        pnFiltrosCliente1.add(txtCodigoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 120, -1));

        lbNomeCliente1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbNomeCliente1.setText("Nome");
        pnFiltrosCliente1.add(lbNomeCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, -1, -1));

        txtNomeCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeClienteFocusLost(evt);
            }
        });
        pnFiltrosCliente1.add(txtNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 156, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Filtros");
        pnFiltrosCliente1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 15, 520, 40));

        btFecharCliente1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btFecharCliente1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaocancelar6.png"))); // NOI18N
        btFecharCliente1.setText("Fechar");
        btFecharCliente1.setToolTipText("");
        btFecharCliente1.setBorderPainted(false);
        btFecharCliente1.setContentAreaFilled(false);
        btFecharCliente1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btFecharCliente1.setRequestFocusEnabled(false);
        btFecharCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharCliente1ActionPerformed(evt);
            }
        });
        pnFiltrosCliente1.add(btFecharCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, 110, 40));

        btProcessarCliente1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btProcessarCliente1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaoefetivar5.png"))); // NOI18N
        btProcessarCliente1.setText("Processar");
        btProcessarCliente1.setToolTipText("");
        btProcessarCliente1.setBorderPainted(false);
        btProcessarCliente1.setContentAreaFilled(false);
        btProcessarCliente1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btProcessarCliente1.setRequestFocusEnabled(false);
        btProcessarCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcessarCliente1ActionPerformed(evt);
            }
        });
        pnFiltrosCliente1.add(btProcessarCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 110, 40));

        FilterClientList.getContentPane().add(pnFiltrosCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 310));

        FilterEmployeeList.setUndecorated(true);
        FilterEmployeeList.setResizable(false);
        FilterEmployeeList.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnFiltrosFuncionarios.setBackground(new java.awt.Color(255, 255, 255));
        pnFiltrosFuncionarios.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCPFFuncionario.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtCPFFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCPFFuncionarioFocusGained(evt);
            }
        });
        pnFiltrosFuncionarios.add(txtCPFFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 156, -1));

        lbCPFFuncionario.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lbCPFFuncionario.setText("CPF");
        pnFiltrosFuncionarios.add(lbCPFFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, -1, 20));

        lbRGFuncionario.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lbRGFuncionario.setText("RG");
        pnFiltrosFuncionarios.add(lbRGFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, 20));

        txtRGFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRGFuncionarioFocusGained(evt);
            }
        });
        pnFiltrosFuncionarios.add(txtRGFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 120, -1));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setOpaque(true);
        jLabel11.setPreferredSize(new java.awt.Dimension(400, 2));
        pnFiltrosFuncionarios.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 440, 2));

        lbCodigoFuncionario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbCodigoFuncionario.setText("Codigo");
        pnFiltrosFuncionarios.add(lbCodigoFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));
        pnFiltrosFuncionarios.add(txtCodigoFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 120, -1));

        lbNomeFuncionario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbNomeFuncionario.setText("Nome");
        pnFiltrosFuncionarios.add(lbNomeFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, -1, -1));

        txtNomeFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeFuncionarioFocusLost(evt);
            }
        });
        pnFiltrosFuncionarios.add(txtNomeFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 156, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Filtros");
        pnFiltrosFuncionarios.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 15, 520, 40));

        btFecharFuncionario.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btFecharFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaocancelar6.png"))); // NOI18N
        btFecharFuncionario.setText("Fechar");
        btFecharFuncionario.setToolTipText("");
        btFecharFuncionario.setBorderPainted(false);
        btFecharFuncionario.setContentAreaFilled(false);
        btFecharFuncionario.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btFecharFuncionario.setRequestFocusEnabled(false);
        btFecharFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharFuncionarioActionPerformed(evt);
            }
        });
        pnFiltrosFuncionarios.add(btFecharFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, 110, 40));

        btProcessarFuncionario.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btProcessarFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaoefetivar5.png"))); // NOI18N
        btProcessarFuncionario.setText("Processar");
        btProcessarFuncionario.setToolTipText("");
        btProcessarFuncionario.setBorderPainted(false);
        btProcessarFuncionario.setContentAreaFilled(false);
        btProcessarFuncionario.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btProcessarFuncionario.setRequestFocusEnabled(false);
        btProcessarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcessarFuncionarioActionPerformed(evt);
            }
        });
        pnFiltrosFuncionarios.add(btProcessarFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 110, 40));

        FilterEmployeeList.getContentPane().add(pnFiltrosFuncionarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 310));

        FilterOrderList.setMinimumSize(new java.awt.Dimension(691, 400));
        FilterOrderList.setUndecorated(true);
        FilterOrderList.setResizable(false);
        FilterOrderList.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnFiltrosMovimentacoes.setBackground(new java.awt.Color(255, 255, 255));
        pnFiltrosMovimentacoes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCPFClienteMovimentacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCPFClienteMovimentacao.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtCPFClienteMovimentacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCPFClienteMovimentacaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCPFClienteMovimentacaoFocusLost(evt);
            }
        });
        pnFiltrosMovimentacoes.add(txtCPFClienteMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, 150, -1));

        lbCPFClienteMovimentacao.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lbCPFClienteMovimentacao.setText("CPF");
        pnFiltrosMovimentacoes.add(lbCPFClienteMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, -1, 20));

        lbRGClienteMovimentacao.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lbRGClienteMovimentacao.setText("RG");
        pnFiltrosMovimentacoes.add(lbRGClienteMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, -1, 20));

        txtRGClienteMovimentacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRGClienteMovimentacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRGClienteMovimentacaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRGClienteMovimentacaoFocusLost(evt);
            }
        });
        pnFiltrosMovimentacoes.add(txtRGClienteMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, 150, -1));

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setOpaque(true);
        jLabel15.setPreferredSize(new java.awt.Dimension(400, 2));
        pnFiltrosMovimentacoes.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 610, 2));

        lbCodigoMovimentacao.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbCodigoMovimentacao.setText("Movimentacao");
        pnFiltrosMovimentacoes.add(lbCodigoMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));

        txtCodigoMovimentacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pnFiltrosMovimentacoes.add(txtCodigoMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 140, -1));

        lbCliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbCliente.setText("Cliente");
        pnFiltrosMovimentacoes.add(lbCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, -1));

        txtCodigoClienteMovimentacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pnFiltrosMovimentacoes.add(txtCodigoClienteMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 140, -1));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Filtros");
        pnFiltrosMovimentacoes.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 15, 690, 40));

        btLimparMovimentacao.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btLimparMovimentacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaoefetivar5.png"))); // NOI18N
        btLimparMovimentacao.setText("Limpar");
        btLimparMovimentacao.setToolTipText("");
        btLimparMovimentacao.setBorderPainted(false);
        btLimparMovimentacao.setContentAreaFilled(false);
        btLimparMovimentacao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btLimparMovimentacao.setRequestFocusEnabled(false);
        btLimparMovimentacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparMovimentacaoActionPerformed(evt);
            }
        });
        pnFiltrosMovimentacoes.add(btLimparMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 110, 40));

        btFecharMovimentacao.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btFecharMovimentacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaocancelar6.png"))); // NOI18N
        btFecharMovimentacao.setText("Fechar");
        btFecharMovimentacao.setToolTipText("");
        btFecharMovimentacao.setBorderPainted(false);
        btFecharMovimentacao.setContentAreaFilled(false);
        btFecharMovimentacao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btFecharMovimentacao.setRequestFocusEnabled(false);
        btFecharMovimentacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharMovimentacaoActionPerformed(evt);
            }
        });
        pnFiltrosMovimentacoes.add(btFecharMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 320, 110, 40));

        lbCodigoClienteMovimentacao.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbCodigoClienteMovimentacao.setText("Cod. Cliente");
        pnFiltrosMovimentacoes.add(lbCodigoClienteMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        txtNomeClienteMovimentacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pnFiltrosMovimentacoes.add(txtNomeClienteMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 140, -1));

        txtDataInicial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataInicial.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDataInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDataInicialFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataInicialFocusLost(evt);
            }
        });
        pnFiltrosMovimentacoes.add(txtDataInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 120, -1));

        txtDataFinal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataFinal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDataFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDataFinalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataFinalFocusLost(evt);
            }
        });
        pnFiltrosMovimentacoes.add(txtDataFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 250, 120, -1));

        lbDataFinal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbDataFinal.setText("Data Final");
        lbDataFinal.setPreferredSize(new java.awt.Dimension(76, 17));
        pnFiltrosMovimentacoes.add(lbDataFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, 80, -1));

        lbDataInicial.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbDataInicial.setText("Data Inicial");
        pnFiltrosMovimentacoes.add(lbDataInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, -1, -1));

        txtNomeFuncionarioMovimentacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pnFiltrosMovimentacoes.add(txtNomeFuncionarioMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 110, -1));

        lbFuncionario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbFuncionario.setText("Cabeleireiro");
        pnFiltrosMovimentacoes.add(lbFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, -1));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("De");
        pnFiltrosMovimentacoes.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, -1, -1));

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setText("Até");
        pnFiltrosMovimentacoes.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, -1, -1));

        btProcessarMovimentacao.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btProcessarMovimentacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaoefetivar5.png"))); // NOI18N
        btProcessarMovimentacao.setText("Processar");
        btProcessarMovimentacao.setToolTipText("");
        btProcessarMovimentacao.setBorderPainted(false);
        btProcessarMovimentacao.setContentAreaFilled(false);
        btProcessarMovimentacao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btProcessarMovimentacao.setRequestFocusEnabled(false);
        btProcessarMovimentacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcessarMovimentacaoActionPerformed(evt);
            }
        });
        btProcessarMovimentacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btProcessarMovimentacaoKeyPressed(evt);
            }
        });
        pnFiltrosMovimentacoes.add(btProcessarMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, 110, 40));

        FilterOrderList.getContentPane().add(pnFiltrosMovimentacoes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 400));

        FiltroTotalizadorPorMes.setMinimumSize(new java.awt.Dimension(528, 230));
        FiltroTotalizadorPorMes.setUndecorated(true);
        FiltroTotalizadorPorMes.setResizable(false);
        FiltroTotalizadorPorMes.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnFiltrosMovimentacoes1.setBackground(new java.awt.Color(255, 255, 255));
        pnFiltrosMovimentacoes1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setBackground(new java.awt.Color(0, 0, 0));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setOpaque(true);
        jLabel19.setPreferredSize(new java.awt.Dimension(400, 2));
        pnFiltrosMovimentacoes1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 450, 2));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Filtros | Totalizador por Mes");
        pnFiltrosMovimentacoes1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 15, 530, 40));

        btFecharFiltroTotalizadorMes.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btFecharFiltroTotalizadorMes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaocancelar6.png"))); // NOI18N
        btFecharFiltroTotalizadorMes.setText("Fechar");
        btFecharFiltroTotalizadorMes.setToolTipText("");
        btFecharFiltroTotalizadorMes.setBorderPainted(false);
        btFecharFiltroTotalizadorMes.setContentAreaFilled(false);
        btFecharFiltroTotalizadorMes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btFecharFiltroTotalizadorMes.setRequestFocusEnabled(false);
        btFecharFiltroTotalizadorMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharFiltroTotalizadorMesActionPerformed(evt);
            }
        });
        pnFiltrosMovimentacoes1.add(btFecharFiltroTotalizadorMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 110, 40));

        btProcessarFiltroTotalizadorMes.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btProcessarFiltroTotalizadorMes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaoefetivar5.png"))); // NOI18N
        btProcessarFiltroTotalizadorMes.setText("Processar");
        btProcessarFiltroTotalizadorMes.setToolTipText("");
        btProcessarFiltroTotalizadorMes.setBorderPainted(false);
        btProcessarFiltroTotalizadorMes.setContentAreaFilled(false);
        btProcessarFiltroTotalizadorMes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btProcessarFiltroTotalizadorMes.setRequestFocusEnabled(false);
        btProcessarFiltroTotalizadorMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcessarFiltroTotalizadorMesActionPerformed(evt);
            }
        });
        pnFiltrosMovimentacoes1.add(btProcessarFiltroTotalizadorMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 110, 40));

        lbAnoReferenciaTotalizadorPorMes.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbAnoReferenciaTotalizadorPorMes.setText("Ano de Referencia");
        pnFiltrosMovimentacoes1.add(lbAnoReferenciaTotalizadorPorMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, 20));
        pnFiltrosMovimentacoes1.add(txtAnoTotalizadorPorMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 90, -1));

        FiltroTotalizadorPorMes.getContentPane().add(pnFiltrosMovimentacoes1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 230));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(803, 489));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnTitulo.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Central de relatórios");

        javax.swing.GroupLayout pnTituloLayout = new javax.swing.GroupLayout(pnTitulo);
        pnTitulo.setLayout(pnTituloLayout);
        pnTituloLayout.setHorizontalGroup(
            pnTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTituloLayout.createSequentialGroup()
                .addContainerGap(152, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnTituloLayout.setVerticalGroup(
            pnTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTituloLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        getContentPane().add(pnTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 50));

        pnMenu.setBackground(new java.awt.Color(0, 0, 0));
        pnMenu.setForeground(new java.awt.Color(51, 51, 51));
        pnMenu.setMaximumSize(new java.awt.Dimension(380, 344));
        pnMenu.setPreferredSize(new java.awt.Dimension(220, 300));
        pnMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setMaximumSize(new java.awt.Dimension(80, 2));
        jLabel1.setMinimumSize(new java.awt.Dimension(80, 2));
        jLabel1.setOpaque(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(80, 1));
        pnMenu.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 91, 140, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Categorias");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnMenu.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 180, 30));

        jLabel3.setText("  ");
        pnMenu.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, -1, -1));

        btTodos.setBackground(new java.awt.Color(0, 0, 0));
        btTodos.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        btTodos.setForeground(new java.awt.Color(255, 255, 255));
        btTodos.setText("Todos");
        btTodos.setToolTipText("");
        btTodos.setBorderPainted(false);
        btTodos.setContentAreaFilled(false);
        btTodos.setFocusPainted(false);
        btTodos.setMaximumSize(new java.awt.Dimension(230, 50));
        btTodos.setMinimumSize(new java.awt.Dimension(120, 45));
        btTodos.setOpaque(true);
        btTodos.setPreferredSize(new java.awt.Dimension(180, 50));
        btTodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btTodosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btTodosMouseExited(evt);
            }
        });
        btTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTodosActionPerformed(evt);
            }
        });
        pnMenu.add(btTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 180, -1));

        btCliente.setBackground(new java.awt.Color(0, 0, 0));
        btCliente.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        btCliente.setForeground(new java.awt.Color(255, 255, 255));
        btCliente.setText("Clientes");
        btCliente.setToolTipText("");
        btCliente.setBorderPainted(false);
        btCliente.setContentAreaFilled(false);
        btCliente.setFocusPainted(false);
        btCliente.setMaximumSize(new java.awt.Dimension(230, 50));
        btCliente.setMinimumSize(new java.awt.Dimension(120, 45));
        btCliente.setOpaque(true);
        btCliente.setPreferredSize(new java.awt.Dimension(180, 50));
        btCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btClienteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btClienteMouseExited(evt);
            }
        });
        btCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClienteActionPerformed(evt);
            }
        });
        pnMenu.add(btCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 180, -1));

        btServico.setBackground(new java.awt.Color(0, 0, 0));
        btServico.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        btServico.setForeground(new java.awt.Color(255, 255, 255));
        btServico.setText("Serviços");
        btServico.setToolTipText("");
        btServico.setBorderPainted(false);
        btServico.setContentAreaFilled(false);
        btServico.setFocusPainted(false);
        btServico.setMaximumSize(new java.awt.Dimension(230, 50));
        btServico.setMinimumSize(new java.awt.Dimension(120, 45));
        btServico.setOpaque(true);
        btServico.setPreferredSize(new java.awt.Dimension(180, 45));
        btServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btServicoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btServicoMouseExited(evt);
            }
        });
        btServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btServicoActionPerformed(evt);
            }
        });
        pnMenu.add(btServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 180, 50));

        btFuncionario.setBackground(new java.awt.Color(0, 0, 0));
        btFuncionario.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        btFuncionario.setForeground(new java.awt.Color(255, 255, 255));
        btFuncionario.setText("Funcionarios");
        btFuncionario.setToolTipText("");
        btFuncionario.setBorderPainted(false);
        btFuncionario.setContentAreaFilled(false);
        btFuncionario.setFocusPainted(false);
        btFuncionario.setMaximumSize(new java.awt.Dimension(230, 50));
        btFuncionario.setMinimumSize(new java.awt.Dimension(120, 45));
        btFuncionario.setOpaque(true);
        btFuncionario.setPreferredSize(new java.awt.Dimension(180, 45));
        btFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btFuncionarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btFuncionarioMouseExited(evt);
            }
        });
        btFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFuncionarioActionPerformed(evt);
            }
        });
        pnMenu.add(btFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, -1, 50));

        btMovimentacao.setBackground(new java.awt.Color(0, 0, 0));
        btMovimentacao.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        btMovimentacao.setForeground(new java.awt.Color(255, 255, 255));
        btMovimentacao.setText("Movimentação");
        btMovimentacao.setToolTipText("");
        btMovimentacao.setBorderPainted(false);
        btMovimentacao.setContentAreaFilled(false);
        btMovimentacao.setFocusPainted(false);
        btMovimentacao.setMaximumSize(new java.awt.Dimension(230, 50));
        btMovimentacao.setMinimumSize(new java.awt.Dimension(120, 45));
        btMovimentacao.setOpaque(true);
        btMovimentacao.setPreferredSize(new java.awt.Dimension(180, 45));
        btMovimentacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btMovimentacaoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btMovimentacaoMouseExited(evt);
            }
        });
        btMovimentacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMovimentacaoActionPerformed(evt);
            }
        });
        pnMenu.add(btMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 180, 50));

        getContentPane().add(pnMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 490));

        pnDireito.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnDireitoLayout = new javax.swing.GroupLayout(pnDireito);
        pnDireito.setLayout(pnDireitoLayout);
        pnDireitoLayout.setHorizontalGroup(
            pnDireitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        pnDireitoLayout.setVerticalGroup(
            pnDireitoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        getContentPane().add(pnDireito, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 30, 40, 410));

        grid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Descrição", "Categoria", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grid.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        grid.setShowHorizontalLines(false);
        jScrollPane1.setViewportView(grid);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 590, 390));

        pnInferior.setBackground(new java.awt.Color(0, 0, 0));

        btCancelar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaocancelar6.png"))); // NOI18N
        btCancelar.setText("Fechar");
        btCancelar.setToolTipText("");
        btCancelar.setBorderPainted(false);
        btCancelar.setContentAreaFilled(false);
        btCancelar.setFocusPainted(false);
        btCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btProcessar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btProcessar.setForeground(new java.awt.Color(255, 255, 255));
        btProcessar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/botaoefetivar5.png"))); // NOI18N
        btProcessar.setText("Processar");
        btProcessar.setBorderPainted(false);
        btProcessar.setContentAreaFilled(false);
        btProcessar.setFocusPainted(false);
        btProcessar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btProcessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcessarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnInferiorLayout = new javax.swing.GroupLayout(pnInferior);
        pnInferior.setLayout(pnInferiorLayout);
        pnInferiorLayout.setHorizontalGroup(
            pnInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInferiorLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(btProcessar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );
        pnInferiorLayout.setVerticalGroup(
            pnInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, Short.MAX_VALUE)
            .addComponent(btProcessar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        getContentPane().add(pnInferior, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 630, 50));

        setSize(new java.awt.Dimension(803, 489));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btClienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btClienteMouseEntered

    }//GEN-LAST:event_btClienteMouseEntered

    private void btClienteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btClienteMouseExited

    }//GEN-LAST:event_btClienteMouseExited

    private void btClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClienteActionPerformed
        listaRelatorios(clientes);
    }//GEN-LAST:event_btClienteActionPerformed

    private void btServicoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btServicoMouseEntered
        setButton(btServico);
    }//GEN-LAST:event_btServicoMouseEntered

    private void btServicoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btServicoMouseExited
        resetButton(btServico);
    }//GEN-LAST:event_btServicoMouseExited

    private void btServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btServicoActionPerformed
        listaRelatorios(servicos);
    }//GEN-LAST:event_btServicoActionPerformed

    private void btFuncionarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btFuncionarioMouseEntered
        setButton(btFuncionario);
    }//GEN-LAST:event_btFuncionarioMouseEntered

    private void btFuncionarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btFuncionarioMouseExited
        resetButton(btFuncionario);
    }//GEN-LAST:event_btFuncionarioMouseExited

    private void btFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFuncionarioActionPerformed
        listaRelatorios(funcionarios);
    }//GEN-LAST:event_btFuncionarioActionPerformed

    private void btMovimentacaoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btMovimentacaoMouseEntered
        setButton(btMovimentacao);
    }//GEN-LAST:event_btMovimentacaoMouseEntered

    private void btMovimentacaoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btMovimentacaoMouseExited
        resetButton(btMovimentacao);
    }//GEN-LAST:event_btMovimentacaoMouseExited

    private void btMovimentacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMovimentacaoActionPerformed
        listaRelatorios(movimentacoes);
    }//GEN-LAST:event_btMovimentacaoActionPerformed

    private void btProcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcessarActionPerformed
        Report relatorio = getRelatorioSelecionado();
        switch (relatorio.getCategory()) {
            case "CLIENTES":
                FilterClientList.setModal(true);
                FilterClientList.setLocationRelativeTo(null);
                FilterClientList.setVisible(true);
                break;

            case "SERVICOS":
                FilterProductList.setModal(true);
                FilterProductList.setLocationRelativeTo(null);
                FilterProductList.setVisible(true);
                break;

            case "FUNCIONARIOS":
                FilterEmployeeList.setModal(true);
                FilterEmployeeList.setLocationRelativeTo(null);
                FilterEmployeeList.setVisible(true);
                break;
            case "MOVIMENTACAO":
                if (relatorio.getId() == 4) {
                    FilterOrderList.setModal(true);
                    FilterOrderList.setLocationRelativeTo(null);
                    FilterOrderList.setVisible(true);
                } else if (relatorio.getId() == 5) {
                    FiltroTotalizadorPorMes.setModal(true);
                    FiltroTotalizadorPorMes.setLocationRelativeTo(null);
                    FiltroTotalizadorPorMes.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Filtro não encontrado para esse relatorio");
                }

                break;
        }
    }//GEN-LAST:event_btProcessarActionPerformed

    private void btTodosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btTodosMouseEntered
        setButton(btTodos);
    }//GEN-LAST:event_btTodosMouseEntered

    private void btTodosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btTodosMouseExited
        resetButton(btTodos);
    }//GEN-LAST:event_btTodosMouseExited

    private void btTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTodosActionPerformed
        listaRelatorios(listReport);
    }//GEN-LAST:event_btTodosActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void txtDescricaoServicoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescricaoServicoFocusLost
        String minuscula = txtDescricaoServico.getText();
        txtDescricaoServico.setText(minuscula.toUpperCase());
    }//GEN-LAST:event_txtDescricaoServicoFocusLost

    private void btFecharServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharServicoActionPerformed
        FilterProductList.setVisible(false);
    }//GEN-LAST:event_btFecharServicoActionPerformed

    private void btProcessarServicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcessarServicosActionPerformed
        try {
            int codigo = txtCodigoServico.getText().equals("") ? 0 : Integer.parseInt(txtCodigoServico.getText());
            String cbInativo = ckListaInativo.isSelected() == false ? "F" : "T";
            //criando objeto com os filtros fornecidos pelo usuario, para consultar no banco
            List<Product> servicos = service.ProductService.findAll(String.valueOf(codigo), txtDescricaoServico.getText(), cbInativo, limite);

            //parametros do relatorio, colocando dentro de um map para passar ao jasper preencher os paramatros do relatorio
            cbInativo = cbInativo.equals("F") ? "Não" : "Sim";
            Map parameters = new HashMap();
            parameters.put("Codigo", codigo);
            parameters.put("Descricao", txtDescricaoServico.getText());
            parameters.put("Lista Inativo", cbInativo);

            //fecha a tela de filtros após processar o relatorio
            FilterProductList.setVisible(false);

            //criando objeto do jasper para posteriormente exibir o relatorio na tela
            JasperReport relatorioCompilado = JasperCompileManager.compileReport(relatorio.getDirectory());
            JasperPrint relatorioPreenchido = JasperFillManager.fillReport(relatorioCompilado, parameters, new JRBeanCollectionDataSource(servicos));
            JasperViewer.viewReport(relatorioPreenchido, false);
        } catch (JRException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btProcessarServicosActionPerformed

    private void txtCPFFuncionarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCPFFuncionarioFocusGained
        txtCPFFuncionario.setFormatterFactory(Mascara.getCpfMask());
    }//GEN-LAST:event_txtCPFFuncionarioFocusGained

    private void txtRGFuncionarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRGFuncionarioFocusGained
        txtRGFuncionario.setFormatterFactory(Mascara.getRgMask());
    }//GEN-LAST:event_txtRGFuncionarioFocusGained

    private void txtNomeFuncionarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFuncionarioFocusLost
        String minuscula = txtNomeFuncionario.getText();
        txtNomeFuncionario.setText(minuscula.toUpperCase());
    }//GEN-LAST:event_txtNomeFuncionarioFocusLost

    private void btFecharFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharFuncionarioActionPerformed
        FilterEmployeeList.setVisible(false);
    }//GEN-LAST:event_btFecharFuncionarioActionPerformed

    private void btProcessarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcessarFuncionarioActionPerformed
        try {
            int codigo = txtCodigoFuncionario.getText().equals("") ? 0 : Integer.parseInt(txtCodigoFuncionario.getText());

            //criando objeto com os filtros fornecidos pelo usuario, para consultar no banco
            List<Employee> funcionario = service.EmployeeService.findAll(String.valueOf(codigo), txtNomeFuncionario.getText(), txtCPFFuncionario.getText(), txtRGFuncionario.getText(), "", limite);

            //parametros do relatorio, colocando dentro de um map para passar ao jasper preencher os paramatros do relatorio
            Map parameters = new HashMap();
            parameters.put("codigo", codigo);
            parameters.put("nome", txtNomeFuncionario.getText());
            parameters.put("cpf", txtCPFFuncionario.getText());
            parameters.put("rg", txtRGFuncionario.getText());

            //fecha a tela de filtros após processar o relatorio
            FilterEmployeeList.setVisible(false);

            //criando objeto do jasper para posteriormente exibir o relatorio na tela
            JasperReport relatorioCompilado = JasperCompileManager.compileReport(relatorio.getDirectory());
            JasperPrint relatorioPreenchido = JasperFillManager.fillReport(relatorioCompilado, parameters, new JRBeanCollectionDataSource(funcionario));
            JasperViewer.viewReport(relatorioPreenchido, false);

        } catch (JRException ex) {
            ex.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btProcessarFuncionarioActionPerformed

    private void txtCPFClienteMovimentacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCPFClienteMovimentacaoFocusGained
        txtCPFClienteMovimentacao.setFormatterFactory(Mascara.getCpfMask());
    }//GEN-LAST:event_txtCPFClienteMovimentacaoFocusGained

    private void txtCPFClienteMovimentacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCPFClienteMovimentacaoFocusLost
        if (txtCPFClienteMovimentacao.getText().equals("___.___.___-__")) {
            txtCPFClienteMovimentacao.setText("");
            txtCPFClienteMovimentacao.setFormatterFactory(util.Mascara.cleanMak());
        }
    }//GEN-LAST:event_txtCPFClienteMovimentacaoFocusLost

    private void txtRGClienteMovimentacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRGClienteMovimentacaoFocusGained
        txtRGClienteMovimentacao.setFormatterFactory(Mascara.getRgMask());
    }//GEN-LAST:event_txtRGClienteMovimentacaoFocusGained

    private void txtRGClienteMovimentacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRGClienteMovimentacaoFocusLost
        if (txtRGClienteMovimentacao.getText().equals("__.___.___-_")) {
            txtRGClienteMovimentacao.setText("");
            txtRGClienteMovimentacao.setFormatterFactory(util.Mascara.cleanMak());
        }
    }//GEN-LAST:event_txtRGClienteMovimentacaoFocusLost

    private void btLimparMovimentacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparMovimentacaoActionPerformed
        txtDataInicial.setFormatterFactory(util.Mascara.cleanMak());
        txtDataFinal.setFormatterFactory(util.Mascara.cleanMak());
        txtRGClienteMovimentacao.setFormatterFactory(util.Mascara.cleanMak());
        txtCPFClienteMovimentacao.setFormatterFactory(util.Mascara.cleanMak());
        txtCodigoMovimentacao.setText("");
        txtCodigoClienteMovimentacao.setText("");
        txtNomeClienteMovimentacao.setText("");
        txtNomeFuncionarioMovimentacao.setText("");
    }//GEN-LAST:event_btLimparMovimentacaoActionPerformed

    private void btFecharMovimentacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharMovimentacaoActionPerformed
        FilterOrderList.setVisible(false);
    }//GEN-LAST:event_btFecharMovimentacaoActionPerformed

    private void txtDataInicialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataInicialFocusGained
        txtDataInicial.setFormatterFactory(util.Mascara.getDataMask());
    }//GEN-LAST:event_txtDataInicialFocusGained

    private void txtDataInicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataInicialFocusLost
        if (txtDataInicial.getText().equals("  /  /    ")) {
            txtDataInicial.setText("");
            txtDataInicial.setFormatterFactory(util.Mascara.cleanMak());
            txtDataFinal.setFormatterFactory(util.Mascara.cleanMak());
        }
    }//GEN-LAST:event_txtDataInicialFocusLost

    private void txtDataFinalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataFinalFocusGained
        txtDataFinal.setFormatterFactory(util.Mascara.getDataMask());
    }//GEN-LAST:event_txtDataFinalFocusGained

    private void txtDataFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataFinalFocusLost
        if (txtDataFinal.getText().equals("  /  /    ")) {
            txtDataFinal.setText("");
            txtDataInicial.setFormatterFactory(util.Mascara.cleanMak());
            txtDataFinal.setFormatterFactory(util.Mascara.cleanMak());
        }
    }//GEN-LAST:event_txtDataFinalFocusLost

    private void btProcessarMovimentacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcessarMovimentacaoActionPerformed
        try {
            int codigoMovimentacao = txtCodigoMovimentacao.getText().equals("") ? 0 : Integer.parseInt(txtCodigoMovimentacao.getText());
            int codigoCliente = txtCodigoClienteMovimentacao.getText().equals("") ? 0 : Integer.parseInt(txtCodigoClienteMovimentacao.getText());
            String dataConcatenada = txtDataInicial.getText() + "x" + txtDataFinal.getText();

            List<Order> movimentacao = service.OrderService.findCustom(String.valueOf(codigoMovimentacao), String.valueOf(codigoCliente),
                    txtNomeClienteMovimentacao.getText(), txtCPFClienteMovimentacao.getText(), txtRGClienteMovimentacao.getText(), txtNomeFuncionarioMovimentacao.getText(), dataConcatenada, limite);

            Map parameters = new HashMap();

            parameters.put("movimentacao", codigoMovimentacao);
            parameters.put("codCliente", codigoCliente);
            parameters.put("cliente", txtNomeClienteMovimentacao.getText());
            parameters.put("cabeleireiro", txtNomeFuncionarioMovimentacao.getText());
            parameters.put("cpf", txtCPFClienteMovimentacao.getText());
            parameters.put("rg", txtRGClienteMovimentacao.getText());
            parameters.put("dataInicial", txtDataInicial.getText());
            parameters.put("dataFinal", txtDataFinal.getText());

            FilterOrderList.setVisible(false);
            btLimparMovimentacao.doClick();

            JasperReport relatorioCompilado = JasperCompileManager.compileReport(relatorio.getDirectory());
            JasperPrint relatorioPreenchido = JasperFillManager.fillReport(relatorioCompilado, parameters, new JRBeanCollectionDataSource(movimentacao));
            JasperViewer.viewReport(relatorioPreenchido, false);

        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, ex);
            ex.printStackTrace();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_btProcessarMovimentacaoActionPerformed

    private void btProcessarMovimentacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btProcessarMovimentacaoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            btProcessarMovimentacao.doClick();
        }
    }//GEN-LAST:event_btProcessarMovimentacaoKeyPressed

    private void btFecharFiltroTotalizadorMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharFiltroTotalizadorMesActionPerformed
        FiltroTotalizadorPorMes.setVisible(false);
    }//GEN-LAST:event_btFecharFiltroTotalizadorMesActionPerformed

    private void btProcessarFiltroTotalizadorMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcessarFiltroTotalizadorMesActionPerformed
        try {
            int ano = txtAnoTotalizadorPorMes.getText().equals("") ? 0 : Integer.parseInt(txtAnoTotalizadorPorMes.getText());
            Report relatorio = new Report();

            Map parameters = new HashMap();
            parameters.put("Ano", ano);

            FiltroTotalizadorPorMes.setVisible(false);
            txtAnoTotalizadorPorMes.setText("");

            JasperReport relatorioCompilado = JasperCompileManager.compileReport(this.relatorio.getDirectory());
            JasperPrint relatorioPreenchido = JasperFillManager.fillReport(relatorioCompilado, parameters, new JRBeanCollectionDataSource(null));
            JasperViewer.viewReport(relatorioPreenchido, false);

        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, ex);
            ex.printStackTrace();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_btProcessarFiltroTotalizadorMesActionPerformed

    private void btProcessarCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcessarCliente1ActionPerformed
        try {
            int codigo = txtCodigoCliente.getText().equals("") ? 0 : Integer.parseInt(txtCodigoCliente.getText());

            List<Client> cliente =  service.ClientService.findAll(String.valueOf(codigo), txtNomeCliente.getText(), txtCPFCliente.getText(), txtRGCliente.getText(),"",limite);

            Map parameters = new HashMap();
            parameters.put("codigo", codigo);
            parameters.put("nome", txtNomeCliente.getText());
            parameters.put("cpf", txtCPFCliente.getText());
            parameters.put("rg", txtRGCliente.getText());

            FilterClientList.setVisible(false);

            JasperReport relatorioCompilado = JasperCompileManager.compileReport(relatorio.getDirectory());
            JasperPrint relatorioPreenchido = JasperFillManager.fillReport(relatorioCompilado, parameters, new JRBeanCollectionDataSource(cliente));
            JasperViewer.viewReport(relatorioPreenchido, false);
        } catch (JRException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btProcessarCliente1ActionPerformed

    private void btFecharCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharCliente1ActionPerformed
        FilterClientList.setVisible(false);
    }//GEN-LAST:event_btFecharCliente1ActionPerformed

    private void txtNomeClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeClienteFocusLost
        String minuscula = txtNomeCliente.getText();
        txtNomeCliente.setText(minuscula.toUpperCase());
    }//GEN-LAST:event_txtNomeClienteFocusLost

    private void txtRGClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRGClienteFocusGained
        txtRGCliente.setFormatterFactory(Mascara.getRgMask());
    }//GEN-LAST:event_txtRGClienteFocusGained

    private void txtCPFClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCPFClienteFocusGained
        txtCPFCliente.setFormatterFactory(Mascara.getCpfMask());
    }//GEN-LAST:event_txtCPFClienteFocusGained

    private static void setButton(JButton botao) {
        botao.setBackground(new Color(58, 58, 58));
        botao.setFont(new Font("Trebuchet MS", 1, 19));
    }

    private static void resetButton(JButton botao) {
        botao.setBackground(new Color(0, 0, 0));
        botao.setFont(new Font("Trebuchet MS", 1, 18));
    }

    private void listaRelatorios(List<Report> relatorio) {
        DefaultTableModel modelo = (DefaultTableModel) grid.getModel();
        modelo.setNumRows(0);

        centralizar(grid, 0);
        centralizar(grid, 1);
        centralizar(grid, 2);
        try {
            List<Report> listagem = relatorio;
            for (Report rel : listagem) {
                modelo.addRow(new Object[]{rel.getId(), rel.getDescription(), rel.getCategory()});
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private static void centralizar(JTable table, int column) {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        table.getColumnModel().getColumn(column).setCellRenderer(centerRenderer);
    }

    private void separaCategoriaRelatorios() {
        for (Report rel : listReport) {
            if (rel.getCategory().equals("SERVICOS")) {
                servicos.add(rel);
            } else if (rel.getCategory().equals("CLIENTES")) {
                clientes.add(rel);
            } else if (rel.getCategory().equals("FUNCIONARIOS")) {
                funcionarios.add(rel);
            } else if (rel.getCategory().equals("MOVIMENTACAO")) {
                movimentacoes.add(rel);
            }
        }
    }

    private Report getRelatorioSelecionado() {
        try {
            int codigo = Integer.parseInt(grid.getValueAt(grid.getSelectedRow(), 0).toString());
            String categoria = grid.getValueAt(grid.getSelectedRow(), 2).toString();
            Report relatorio = new Report();

            for (Report rel : listReport) {
                if (rel.getId() == codigo) {
                    relatorio = rel;
                }
            }
            this.relatorio = relatorio;
            return relatorio;
        } catch (ArrayIndexOutOfBoundsException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Escolha o relatorio que deseja processar");
            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatoriosPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatoriosPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatoriosPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatoriosPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelatoriosPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog FilterClientList;
    private javax.swing.JDialog FilterEmployeeList;
    private javax.swing.JDialog FilterOrderList;
    private javax.swing.JDialog FilterProductList;
    private javax.swing.JDialog FiltroTotalizadorPorMes;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCliente;
    private javax.swing.JButton btFecharCliente1;
    private javax.swing.JButton btFecharFiltroTotalizadorMes;
    private javax.swing.JButton btFecharFuncionario;
    private javax.swing.JButton btFecharMovimentacao;
    private javax.swing.JButton btFecharServico;
    private javax.swing.JButton btFuncionario;
    private javax.swing.JButton btLimparMovimentacao;
    private javax.swing.JButton btMovimentacao;
    private javax.swing.JButton btProcessar;
    private javax.swing.JButton btProcessarCliente1;
    private javax.swing.JButton btProcessarFiltroTotalizadorMes;
    private javax.swing.JButton btProcessarFuncionario;
    private javax.swing.JButton btProcessarMovimentacao;
    private javax.swing.JButton btProcessarServicos;
    private javax.swing.JButton btServico;
    private javax.swing.JButton btTodos;
    private javax.swing.JCheckBox ckListaInativo;
    private javax.swing.JTable grid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAnoReferenciaTotalizadorPorMes;
    private javax.swing.JLabel lbCPFCliente1;
    private javax.swing.JLabel lbCPFClienteMovimentacao;
    private javax.swing.JLabel lbCPFFuncionario;
    private javax.swing.JLabel lbCliente;
    private javax.swing.JLabel lbCodigoCliente1;
    private javax.swing.JLabel lbCodigoClienteMovimentacao;
    private javax.swing.JLabel lbCodigoFuncionario;
    private javax.swing.JLabel lbCodigoMovimentacao;
    private javax.swing.JLabel lbDataFinal;
    private javax.swing.JLabel lbDataInicial;
    private javax.swing.JLabel lbFuncionario;
    private javax.swing.JLabel lbNomeCliente1;
    private javax.swing.JLabel lbNomeFuncionario;
    private javax.swing.JLabel lbRGCliente1;
    private javax.swing.JLabel lbRGClienteMovimentacao;
    private javax.swing.JLabel lbRGFuncionario;
    private javax.swing.JPanel pnDireito;
    private javax.swing.JPanel pnFiltrosCliente1;
    private javax.swing.JPanel pnFiltrosFuncionarios;
    private javax.swing.JPanel pnFiltrosMovimentacoes;
    private javax.swing.JPanel pnFiltrosMovimentacoes1;
    private javax.swing.JPanel pnInferior;
    private javax.swing.JPanel pnMenu;
    private javax.swing.JPanel pnTitulo;
    private javax.swing.JTextField txtAnoTotalizadorPorMes;
    private javax.swing.JFormattedTextField txtCPFCliente;
    private javax.swing.JFormattedTextField txtCPFClienteMovimentacao;
    private javax.swing.JFormattedTextField txtCPFFuncionario;
    private javax.swing.JTextField txtCodigoCliente;
    private javax.swing.JTextField txtCodigoClienteMovimentacao;
    private javax.swing.JTextField txtCodigoFuncionario;
    private javax.swing.JTextField txtCodigoMovimentacao;
    private javax.swing.JTextField txtCodigoServico;
    private javax.swing.JFormattedTextField txtDataFinal;
    private javax.swing.JFormattedTextField txtDataInicial;
    private javax.swing.JTextField txtDescricaoServico;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNomeClienteMovimentacao;
    private javax.swing.JTextField txtNomeFuncionario;
    private javax.swing.JTextField txtNomeFuncionarioMovimentacao;
    private javax.swing.JFormattedTextField txtRGCliente;
    private javax.swing.JFormattedTextField txtRGClienteMovimentacao;
    private javax.swing.JFormattedTextField txtRGFuncionario;
    // End of variables declaration//GEN-END:variables

}
